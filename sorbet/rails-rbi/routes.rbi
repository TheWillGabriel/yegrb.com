# This is an autogenerated file for routes helper methods

# typed: strong
class ActionController::Base
  extend T::Sig

  # Sigs for route /videos(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def videos_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def videos_url(*args, **kwargs); end

  # Sigs for route /videos/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_video_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_video_url(*args, **kwargs); end

  # Sigs for route /videos/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_video_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_video_url(*args, **kwargs); end

  # Sigs for route /videos/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def video_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def video_url(*args, **kwargs); end

  # Sigs for route /invites(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invites_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invites_url(*args, **kwargs); end

  # Sigs for route /invites/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_invite_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_invite_url(*args, **kwargs); end

  # Sigs for route /invites/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invite_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def invite_url(*args, **kwargs); end

  # Sigs for route /opportunities/:id/close(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def close_opportunity_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def close_opportunity_url(*args, **kwargs); end

  # Sigs for route /opportunities(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def opportunities_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def opportunities_url(*args, **kwargs); end

  # Sigs for route /opportunities/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_opportunity_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_opportunity_url(*args, **kwargs); end

  # Sigs for route /opportunities/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_opportunity_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_opportunity_url(*args, **kwargs); end

  # Sigs for route /opportunities/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def opportunity_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def opportunity_url(*args, **kwargs); end

  # Sigs for route /events(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def events_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def events_url(*args, **kwargs); end

  # Sigs for route /events/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_event_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_event_url(*args, **kwargs); end

  # Sigs for route /events/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_event_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_event_url(*args, **kwargs); end

  # Sigs for route /events/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def event_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def event_url(*args, **kwargs); end

  # Sigs for route /users(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_url(*args, **kwargs); end

  # Sigs for route /users/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_url(*args, **kwargs); end

  # Sigs for route /users/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_url(*args, **kwargs); end

  # Sigs for route /users/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_url(*args, **kwargs); end

  # Sigs for route /login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def login_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def login_url(*args, **kwargs); end

  # Sigs for route /logout(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def logout_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def logout_url(*args, **kwargs); end

  # Sigs for route /signup(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signup_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def signup_url(*args, **kwargs); end

  # Sigs for route /messages(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def messages_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def messages_url(*args, **kwargs); end

  # Sigs for route /
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end

  # Sigs for route /aboutus(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def aboutus_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def aboutus_url(*args, **kwargs); end

  # Sigs for route /getinvolved(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def getinvolved_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def getinvolved_url(*args, **kwargs); end

  # Sigs for route /resources(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def resources_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def resources_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/blobs/:signed_id/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/direct_uploads(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args, **kwargs); end

end
